{
  "name": "Git-cheatsheet",
  "tagline": "",
  "body": "# <img src=\"https://rawgit.com/lennonjesus/git-cheatsheet/master/git-cheatsheet-logo.svg\" width=\"400px\" />\r\n\r\n#### *A list of useful git commands*\r\n\r\n###### Contributions are welcome!\r\n\r\n#### Go one step back in history\r\n```shell\r\ngit checkout @~1\r\n```\r\n\r\n#### Show commit changes\r\n```shell\r\ngit show <commit-sha>\r\n```\r\n\r\n#### Push master branch to origin\r\n```shell\r\ngit push origin master\r\n```\r\n\r\n#### List all branches\r\n```shell\r\ngit branch -a\r\n```\r\n\r\n#### List remote branches\r\n```shell\r\ngit branch -r\r\n```\r\n\r\n### Push sample-tag to origin\r\n```shell\r\ngit push origin sample-tag\r\n```\r\n\r\n### Delete a tag from remote repository\r\n```shell\r\ngit push origin :sample-tag\r\n```\r\n\r\n### Delete a tag from local repository\r\n```shell\r\ngit tag -d sample-tag\r\n```\r\n\r\n#### List all tags\r\n```shell\r\ngit tag -l\r\n```\r\n\r\n#### Sync list of remote branches\r\n```shell\r\ngit remote update\r\n```\r\n\r\n#### Checkout remote branch into local repository\r\n```shell\r\ngit checkout -t -b <local-name> <remote-name>\r\n```\r\n\r\n#### Create a branch\r\n```shell\r\ngit checkout -b <name>\r\n```\r\n\r\n#### Push local branch to remote\r\n```shell\r\ngit push origin <remote-name>\r\n```\r\n\r\n#### Merge two branches\r\n```shell\r\ngit checkout <target>\r\ngit merge <source>\r\n```\r\n\r\n#### Merge two branches with squash\r\n```shell\r\ngit checkout <target>\r\ngit merge --squash <source>\r\n```\r\n\r\n#### See what branches are merged into master\r\n```shell\r\ngit branch -r --merged master\r\n```\r\n\r\n#### Ignore files globally\r\nhttps://help.github.com/articles/ignoring-files\r\n\r\n#### pull changes from the server + rebase (equivalent of git stash save && git pull && git stash pop && git push) + push\r\n```shell\r\ngit pull --rebase && git push\r\n```\r\n\r\n#### Set up git inet server\r\n```shell\r\ngit daemon --base-path /home/git --verbose\r\n```\r\n\r\n#### Add remote origin\r\n```shell\r\ngit remote add origin <url>\r\n```\r\n\r\n#### Fix 'branch not tracking anything'\r\n```shell\r\ngit config --add branch.master.remote origin\r\ngit config --add branch.master.merge refs/heads/master\r\n```\r\n\r\n#### Extract patch from a given file\r\n```shell\r\ngit diff --patch-with-raw rev1 rev2 patched_file > diff_file\r\n```\r\n\r\n#### Diff with paging\r\n```shell\r\nGIT_PAGER='less -r' git dc\r\n```\r\n\r\n#### Apply a patch\r\n```shell\r\ngit apply diff_file\r\n```\r\n\r\n#### Publish branch\r\n```shell\r\ngit push origin <name>\r\n```\r\n\r\n#### Delete remote branch\r\n```shell\r\ngit push origin :<name>\r\n```\r\n\r\n#### Cherry-pick a commit\r\n```shell\r\ngit cherry-pick -n <sha>\r\n```\r\n\r\n#### Revert commit\r\n```shell\r\ngit revert -n <sha>\r\n```\r\n\r\n#### Reset HEAD to n commits back\r\n```shell\r\ngit reset --hard HEAD~<n>\r\n```\r\n\r\n#### Squash N last commits\r\n```shell\r\ngit rebase --interactive --autosquash HEAD~N\r\n```\r\n\r\n#### search git log commits\r\n```shell\r\ngit log -S “free text”\r\n```\r\n\r\n#### remove file from history (can use 'git rm -rf…' to remove files recursively)\r\n```shell\r\ngit filter-branch --index-filter 'git rm --cached --ignore-unmatch <path to file>' --prune-empty --tag-name-filter cat -- --all\r\ngit push origin master --force\r\nrm -rf .git/refs/original/\r\ngit reflog expire --expire=now --all\r\ngit gc --prune=now\r\ngit gc --aggressive --prune=now\r\n```\r\n\r\n#### Prune history\r\n```shell\r\ngit gc\r\ngit gc --aggressive\r\ngit prune\r\n```\r\n\r\n#### Checkout GitHub PR\r\n```shell\r\ngit fetch origin pull/1234/head:local-branch-name\r\n```\r\n\r\n#### Convert long sha to short one\r\n```shell\r\ngit rev-parse --short <sha>\r\n```\r\n\r\n#### Useful aliases\r\n```shell\r\ngit config --global alias.aa \"add --all\"\r\ngit config --global alias.ai \"add --interactive\"\r\ngit config --global alias.b \"branch\"\r\ngit config --global alias.ba \"branch -a\"\r\ngit config --global alias.c \"commit\"\r\ngit config --global alias.ca \"commit --amend\"\r\ngit config --global alias.cf '!sh -c \"git commit --fixup $@\"'\r\ngit config --global alias.co \"checkout\"\r\ngit config --global alias.col '!sh -c \"git checkout -b $@\"'\r\ngit config --global alias.cor '!sh -c \"git checkout --track -b $@ origin/$@\"'\r\ngit config --global alias.cp \"cherry-pick\"\r\ngit config --global alias.cpa \"cherry-pick --abort\"\r\ngit config --global alias.cpc \"cherry-pick --continue\"\r\ngit config --global alias.cs '!sh -c \"git commit --squash $@\"'\r\ngit config --global alias.d \"diff\"\r\ngit config --global alias.dc \"diff --cached\"\r\ngit config --global alias.ds \"diff --stat\"\r\ngit config --global alias.dsc \"diff --stat --cached\"\r\ngit config --global alias.fpr '!sh -c \"git fetch origin pull/$@/head:$@-pr\"'\r\ngit config --global alias.l \"log\"\r\ngit config --global alias.lf \"log --follow\"\r\ngit config --global alias.lg \"log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative --all\"\r\ngit config --global alias.m \"merge\"\r\ngit config --global alias.mb \"merge-base master HEAD\"\r\ngit config --global alias.ms \"merge --squash\"\r\ngit config --global alias.pl \"pull\"\r\ngit config --global alias.ps \"push\"\r\ngit config --global alias.psc '!sh -c \"git push --set-upstream origin \\$(git rev-parse --abbrev-ref HEAD)\"'\r\ngit config --global alias.psd '!sh -c \"git push origin :\\$(git rev-parse --abbrev-ref HEAD)\"'\r\ngit config --global alias.psf \"push --force-with-lease\"\r\ngit config --global alias.r \"reset HEAD\"\r\ngit config --global alias.rb \"rebase\"\r\ngit config --global alias.rba \"rebase --abort\"\r\ngit config --global alias.rbc \"rebase --continue\"\r\ngit config --global alias.rbi \"rebase --interactive --autosquash\"\r\ngit config --global alias.rbm \"rebase --interactive --autosquash origin/master\"\r\ngit config --global alias.rh \"reset --hard\"\r\ngit config --global alias.rs \"reset --soft\"\r\ngit config --global alias.s \"status\"\r\ngit config --global alias.sh \"show\"\r\ngit config --global alias.shs \"show --stat\"\r\ngit config --global alias.st \"stash\"\r\n```\r\n\r\n#### Global git ignore\r\n```shell\r\ngit config --global core.excludesfile ~/.gitignore\r\n```\r\n\r\n#### Global username & email\r\n```shell\r\ngit config --global user.name \"Lennon Jesus\"\r\ngit config --global user.email 'you@mail.com'\r\n```\r\n\r\n#### Local username & email\r\n```shell\r\ngit config user.name \"Lennon Jesus\"\r\ngit config user.email 'you@mail.com'\r\n```\r\n\r\n#### Cache Password (using git Credential Helper)\r\n```shell\r\ngit config --global credential.helper cache\r\n```\r\n\r\n#### Proxy server\r\n```shell\r\ngit config --global http.proxy http://<proxyuser>:<proxypwd>@<proxy.server.com>:<proxyport>\r\ngit config --global https.proxy http://<proxyuser>:<proxypwd>@<proxy.server.com>:<proxyport>\r\n```\r\n\r\n#### Force git to clone with \"https://\" instead of \"git://\" urls (useful behind proxies)\r\n```shell\r\ngit config --global url.\"https://\".insteadOf git://\r\n```\r\n\r\n#### Color settings\r\n```shell\r\ngit config --global color.diff auto\r\ngit config --global color.status auto\r\ngit config --global color.branch auto\r\n```\r\n\r\n#### Branch name and merge status in bash prompt (should go to local or global bash profile)\r\n```shell\r\nfunction parse_git_dirty {\r\n  [[ $(git status 2> /dev/null | tail -n1) != \"nothing to commit, working directory clean\" ]] && echo \"*\"\r\n}\r\nfunction parse_git_branch {\r\n  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e \"s/* \\(.*\\)/[\\1$(parse_git_dirty)]/\"\r\n}\r\nexport PS1='\\u@\\h \\[\\033[0;36m\\]\\w \\[\\033[0;32m\\]$(parse_git_branch)\\[\\033[0m\\]$ '\r\n```\r\n\r\n#### Tools\r\n\r\n* [GitKraken](http://www.gitkraken.com/) - The downright luxurious Git client for Windows, Mac and Linux. Cross-platform, 100% standalone, and free.\r\n* [SourceTree](https://www.atlassian.com/software/sourcetree/overview) - SourceTree is a powerful Git and Mercurial desktop client for developers on Mac or Windows.\r\n* [git-flow](https://github.com/nvie/gitflow) - A collection of Git extensions to provide high-level repository operations for Vincent Driessen's [branching model](http://nvie.com/posts/a-successful-git-branching-model/).\r\n\r\n#### About\r\n\r\nThis cheatsheet is a fork of [git-cheat-sheet](https://github.com/jakubpawlowicz/git-cheat-sheet) from [Jakub Pawlowicz](https://github.com/jakubpawlowicz)\r\n\r\n#### LICENSE\r\n\r\n[MIT](LICENSE)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}